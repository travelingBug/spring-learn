<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:名称空间；指定为接口的全类名 -->
<mapper namespace="com.wonders.mybatis.dao.EmployeeMapper">
	<!-- id:唯一标识
	 resultType：返回值类型 
	 #{id} ：从传过来的参数中取出id值 -->
	 <!-- public Employee  getEmpById(Integer id); -->
<!--  	<select id="getEmpById"
		resultType="com.wonders.mybatis.bean.Employee">
		起别名，pojo类bean属性名称和数据库对应字段名称不一致 指定返回类型时，不能将不对应的字段封装到pojo实体对象
		select id,last_name lastName,gender,email from tbl_employee where id =
		#{id}
	</select>  -->
	<!-- 利用settings设置，使java类属性的驼峰命名和数据库字段的下划线命名（underscore）能够自动映射 -->
	<!-- <select id="getEmpById"
		resultType="com.wonders.mybatis.bean.Employee">
		select * from tbl_employee where id = #{id}
	</select> -->
	
	<!-- 在全局配置中 为  com.wonders.mybatis.bean.Employee 做了别名设置
	-->
	<!-- <select id="getEmpById"
		resultType="myemployee">
		select * from tbl_employee where id = #{id}
	</select> -->
	<!-- 为整个包起别名 -->
	<!-- <select id="getEmpById"
		resultType="employee">
		select * from tbl_employee where id = #{id}
	</select> -->
	<!-- 在方法上使用@Alias注解 -->
	<select id="getEmpById"
		resultType="MYEMPLOYEE">
		select * from tbl_employee where id = #{id}
	</select> 
	
</mapper>