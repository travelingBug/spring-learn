<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 实验9： 测试bean的作用域，分别创建单实例和多实例的bean* 
		prototype：多实例 
			1)容器启动默认不会创建多实例bean 
			2)每次从容器中获取，都会创建一个新的对象 
		singleton：单实例的，默认的；
			1)容器启动完成之前就已经创建好对象了，保存在容器中 
			2）任何获取都是同一个对象 
		request：web环境下，同一次请求创建一个Bean实例（没用） 
		session：web环境下，同一次会话创建一个Bean实例（没用） 
	-->
	<!-- <bean id="book" class="com.wondersgroup.bean.Book"></bean>
	<bean id="car" class="com.wondersgroup.bean.Car" scope="prototype"></bean> -->

	<!-- 实验10： 
		静态工厂
	-->
	
	<bean id="airPlane" class="com.wondersgroup.factory.StaticAirPlaneFactory"
	 factory-method="getAirPlaneByStatic" scope="prototype">
		<!-- 
		org.springframework.beans.factory.UnsatisfiedDependencyException:
		 Error creating bean with name 'airPlane' defined in class path resource [ioc2.xml]: 
		 Unsatisfied dependency expressed through constructor argument with index 0 of type
		  [java.lang.String]: Ambiguous factory method argument types - 
		  did you specify the correct bean references as factory method arguments?
		 -->
		<!-- <constructor-arg name="jzName2" value="光头强"></constructor-arg> -->
		<!-- 使用name属性指定静态工厂方法的参数，需要和参数列表中的参数名称严格一直 -->
		
		<!-- <constructor-arg name="jzName" value="熊大"></constructor-arg> -->
		<constructor-arg index="0" value="熊二"></constructor-arg>
	</bean>
	
	<!-- 
		实例工厂
	 -->
	<!--  <bean id="instatiationAirPlaneFactory" class="com.wondersgroup.factory.InstantiationAirPlaneFactory"></bean>
	 <bean id="airPlane02" factory-bean="instatiationAirPlaneFactory" factory-method="getAirPlaneByInstantiation">
	 	<constructor-arg name="jzName" value="小花"></constructor-arg>
	 </bean>	  -->
	
	<!-- FactoryBean 接口
	1 容器启动的时候默认不创建
	2 
	If you have complex initialization code that is better expressed in Java as opposed to a (potentially) verbose amount of XML, you can create your own FactoryBean
	 -->
	<bean id="myFactoryBeanImpl" class="com.wondersgroup.factory.MyFactoryBeanImpl"> </bean>
	
	

</beans>
